// Code generated by hertz generator.

package api

import (
	"context"
	"fmt"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	hertzconsts "github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/keycasiter/3g_game/biz/consts"
	api "github.com/keycasiter/3g_game/biz/model/api"
	"github.com/keycasiter/3g_game/biz/util"
)

// GeneralLotteryPoolList @Summary 卡池信息查询
// @Description 武将概率查询
// @Tags 模拟抽卡
// @Accept json
// @Produce json
// @Router /v1/lottery/general/pool_query [GET]
func GeneralLotteryPoolList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.GeneralLotteryPoolListRequest
	var resp api.GeneralLotteryPoolListResponse
	resp.Meta = util.BuildSuccMeta()

	err = c.BindAndValidate(&req)
	hlog.CtxInfof(ctx, "GeneralLotteryPoolInfoQuery Req:%s", util.ToJsonString(ctx, req))
	if err != nil {
		c.String(hertzconsts.StatusBadRequest, err.Error())
		return
	}

	//组合resp
	generalLotteryPoolInfoList := make([]*api.GeneralLotterPoolQueryInfo, 0)
	for _, lotteryPoolId := range consts.GeneralLotteryPoolArr {
		if _, ok := consts.GeneralLotteryPoolMap[lotteryPoolId]; ok {
			generalLotteryPoolInfoList = append(generalLotteryPoolInfoList, &api.GeneralLotterPoolQueryInfo{
				GeneralLotteryPool:     int64(lotteryPoolId),
				GeneralLotteryPoolName: fmt.Sprintf("%v", lotteryPoolId),
			})
		}
	}
	resp.GeneralLotteryPoolInfoList = generalLotteryPoolInfoList

	hlog.CtxInfof(ctx, "GeneralLotteryPoolInfoQuery Resp:%s", util.ToJsonString(ctx, resp))

	c.JSON(hertzconsts.StatusOK, resp)
}
