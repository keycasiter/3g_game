// Code generated by hertz generator.

package lottery

import (
	"context"
	"fmt"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	hertzconsts "github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/keycasiter/3g_game/biz/consts"
	api "github.com/keycasiter/3g_game/biz/model/api"
	"github.com/keycasiter/3g_game/biz/util"
)

// GeneralLotteryRateList @Summary 武将概率查询
// @Description 武将概率查询
// @Tags 模拟抽卡
// @Accept json
// @Produce json
// @Router /v1/lottery/general/rate_query [GET]
func GeneralLotteryRateList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.GeneralLotteryRateListRequest
	var resp api.GeneralLotteryRateListResponse
	resp.Meta = util.BuildSuccMeta()

	err = c.BindAndValidate(&req)
	hlog.CtxInfof(ctx, "GeneralLotteryRateList Req:%s", util.ToJsonString(ctx, req))
	if err != nil {
		c.String(hertzconsts.StatusBadRequest, err.Error())
		return
	}

	//组合resp
	generalLotteryRateInfoList := make([]*api.GeneralLotteryRateListInfo, 0)
	for lotteryPoolId, generalPool := range consts.GeneralLotteryPoolMap {
		if rate, ok := generalPool[consts.General_Id(req.GeneralId)]; ok {
			generalLotteryRateInfoList = append(generalLotteryRateInfoList, &api.GeneralLotteryRateListInfo{
				LotteryRate:            rate,
				GeneralLotteryPool:     int64(lotteryPoolId),
				GeneralLotteryPoolName: fmt.Sprintf("%v", lotteryPoolId),
			})
		}
	}
	resp.GeneralLotteryRateInfoList = generalLotteryRateInfoList

	hlog.CtxInfof(ctx, "GeneralLotteryRateList Resp:%s", util.ToJsonString(ctx, resp))

	c.JSON(hertzconsts.StatusOK, resp)
}
