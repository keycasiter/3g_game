// Code generated by hertz generator.

package api

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	hertzconsts "github.com/cloudwego/hertz/pkg/protocol/consts"
	jymLogic "github.com/keycasiter/3g_game/biz/logic/jym"
	"github.com/keycasiter/3g_game/biz/model/jym"
	"github.com/keycasiter/3g_game/biz/util"
	"github.com/kr/pretty"
)

// AccountSearch 账号查询
// @router /jym/account/search [POST]
func AccountSearch(ctx context.Context, c *app.RequestContext) {
	var err error
	var req jym.AccountSearchRequest
	resp := new(jym.AccountSearchResponse)
	resp.Meta = util.BuildSuccMeta()

	err = c.BindAndValidate(&req)
	//日志打印
	hlog.CtxInfof(ctx, "AccountSearch Req:%s", util.ToJsonString(ctx, req))

	if err != nil {
		hlog.CtxErrorf(ctx, "AccountSearch Run Err:%v", err)
		resp.Meta = util.BuildFailMetaWithMsg("未知错误")
		c.JSON(hertzconsts.StatusOK, resp)
		return
	}

	//逻辑执行
	err = jymLogic.NewAccountSearchContext(ctx, &req, resp).Process()
	if err != nil {
		hlog.CtxErrorf(ctx, "AccountSearchContext Process Err:%v", err)
		resp.Meta = util.BuildFailMetaWithMsg("未知错误")
		c.JSON(hertzconsts.StatusOK, resp)
		return
	}

	c.JSON(hertzconsts.StatusOK, resp)
	//日志打印
	pretty.Logf("resp:%s", util.ToJsonString(ctx, resp))
}
