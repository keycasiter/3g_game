// Code generated by hertz generator.

package api

import (
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	hertzconsts "github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/keycasiter/3g_game/biz/dal/mysql"
	api "github.com/keycasiter/3g_game/biz/model/api"
	"github.com/keycasiter/3g_game/biz/util"
)

// GeneralLotteryUserDataQuery @Summary 用户武将抽卡数据查询
// @Description 用户武将抽卡数据查询
// @Tags 模拟抽卡
// @Accept json
// @Produce json
// @Router /v1/lottery/general/user_data_query [GET]
func GeneralLotteryUserDataQuery(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.GeneralLotteryUserDataQueryRequest
	var resp api.GeneralLotteryUserDataQueryResponse
	resp.Meta = util.BuildSuccMeta()

	err = c.BindAndValidate(&req)
	hlog.CtxInfof(ctx, "GeneralLotteryUserDataQuery Req:%s", util.ToJsonString(ctx, req))
	if err != nil {
		c.String(hertzconsts.StatusBadRequest, err.Error())
		return
	}
	if req.Uid == "" || req.GeneralLotteryPool == 0 {
		resp.Meta = util.BuildParamErrMeta()
		c.JSON(hertzconsts.StatusOK, resp)
		return
	}
	userLotteryInfo, err := mysql.NewUserGeneralLotteryInfo().QueryUserGeneralLotteryInfo(ctx, req.Uid, req.GeneralLotteryPool)
	if err != nil {
		hlog.CtxErrorf(ctx, "GeneralLotteryUserDataQuery err:%v", err)
		resp.Meta = util.BuildFailMeta()
		c.JSON(hertzconsts.StatusOK, resp)
		return
	}
	//组装resp
	resp.GeneralLotteryDataQueryInfo = &api.GeneralLotteryUserDataQueryInfo{
		Uid:                userLotteryInfo.Uid,
		GeneralLotteryPool: userLotteryInfo.CardPoolId,
		NotHitLev5Times:    userLotteryInfo.NotHitLev5Times,
	}

	hlog.CtxInfof(ctx, "GeneralLotteryUserDataQuery Resp:%s", util.ToJsonString(ctx, resp))

	c.JSON(hertzconsts.StatusOK, resp)
}
