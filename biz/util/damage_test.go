package util

import (
	"fmt"
	"testing"
)

// 测试伤害计算
func TestDamage(t *testing.T) {
	//============ 总伤害公式 =============
	//dmg(A->B) = （f1 + f2）*(1 + Inc_A -Dec_A) * (1 + Inc_B - Dec_B) * R * (1 + Crt) * ri
	//
	//其中：
	//
	//f1为兵力伤害公式，见 公式二；
	//f2为武将伤害公式，见 公式三。
	//Inc、Dec为增减伤，共有4类：己方增伤、己方减伤（伤害降低）、敌方增伤（易伤）、敌方减伤。增减伤主要来自于战法、城内建筑，同类增减伤之间加算。
	//R为技能系数，即战法中的伤害系数，普攻默认为100%。
	//Crt为会心伤害，即会心时触发的会心伤害加成。
	//ri为其他的额外增减伤乘区，同类乘区内加算。不同乘区包括兵种克制系数，士气减伤，兵书，州战法等。

	//============ 兵力伤害公式 =============
	// f1 = 0.1877 * Num^0.32 * (Atk_a - Def_b)(幂函数)
	//
	//Num是己方武将带兵数量。
	//Atk-Def是属性差。造成兵刃伤害时=我方武力-敌方统率；造成谋略伤害时=我方智力-敌方智力。

	//============ 武将伤害公式 =============
	// f2 = 0.0005 * x^2 + 0.9 * x + 4.5
	//
	//其中 x = (Atk_a - Def_b)
	//即武将伤害只与双方属性差值有关。
	//该公式将在第三部分【武将伤害】中详细说明。

	//dmg := TotalDamage(4907, 320, 86, 1.109, 0, 0, 0, 0, 0, 0)
	//fmt.Printf("dmg: %d\n", dmg)
}

func TestTotalDamage(t *testing.T) {
	dmg := TotalDamage(2900, 44, 84, 0.075, 0.167)
	fmt.Printf("dmg: %d\n", dmg)
	dmg = dmg + FluctuateDamage(dmg)
	fmt.Printf("wave dmg: %d\n", dmg)
}
